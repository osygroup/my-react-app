
name: "Deploy app to k8s cluster"
on:
  push:
    # run on pushes to master
    branches:
      - master
jobs:
  push-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-react-app:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    #- uses: azure/setup-kubectl@v1   # Not needed. The Github host agent has kubectl installed already
    - name: Deploy to AKS
      run: |
        az account set --subscription a2ba9ff7-3658-4acd-bbdd-279961ec4fac
        az aks get-credentials --resource-group demo --name mercy
        kubectl apply -f ./deployment.yml -n boutique-app
    
    # Adding a kubeconfig file as a secret in Github seems not to work for me. Seems the file gets messed up in the secret
    # I had to add the kubeconfig file in the repository (very unethical) and point the kubectl command to the file
    # I finally got to use the az command for AKS to set current context in /home/runner/.kube/config on the host agent
    # and was able to run kubectl commands on the AKS cluster
    
    #- name: kubectl deploy to cluster
    #  run: |
    #    kubectl apply -f ./deployment.yml -n boutique-app --kubeconfig kubeconfigfile
